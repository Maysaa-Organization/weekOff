// remember to relax and ask for help when you need it (only from staff)// YOU CAN ONLY USE MDN AS A RESOURCE// https://developer.mozilla.org/en-US/docs/Web/JavaScript// NOTE: you are accountable for your styling, so make sure your styling is good.// ANOTHER NOTE: please use the console to test your code :)// use the following helper functions in your solutionfunction each(coll, f) {  if (Array.isArray(coll)) {    for (var i = 0; i < coll.length; i++) {      f(coll[i], i);    }  } else {    for (var key in coll) {      f(coll[key], key);    }  }}function filter(array, predicate) {  var acc = [];  each(array, function(element, i) {    if (predicate(element, i)) {      acc.push(element);    }  });  return acc;}function map(coll, func) {  var acc = [];  if(!(Array.isArray(coll))){      acc ={};  }  each(coll, function(element, i) {    acc[i] = func(element, i);  });  return acc;}function reduce(array, f, acc) {   if (acc === undefined) {     acc = array[0];     array = array.slice(1);   }   each(array, function(element, i) {     acc = f(acc, element, i);   });   return acc; }//=============================================================================/*                                  Q1                                      *///=============================================================================//Write a function that takes an array of strings as a input,and returns an array //of all of those strings, but transformed to upper case. //You can use toUpperCase method to convert a string to upper case.//solve it using the most appropriate helper functions(each,map,filter).// Note: please write one or two lines here describing your solution.// var strArr = ['hello', 'world', 'whirled', 'peas'];// uppercaseAll(strArr); ==> [ 'HELLO', 'WORLD', 'WHIRLED', 'PEAS' ]function uppercaseAll(arrayOfStrings) {     // TODO: your code here      //we must use map because it return array with all element   return map(arrayOfStrings , function(element){      // change the letter status by to upper case function and return the result to save it in the array    return element.toUpperCase();  }) }//=============================================================================/*                                  Q2                                       *///=============================================================================//write a function that takes array of objects  as an input and returns an array//with only the countries that have a population higher than 500 million.//solve it using one of the most appropriate helperthe helpers functions(each,map,filter).//Here’s the data you’ll work with:var data = [{  country: 'China',  population: 1409517397,},{  country: 'India',  population: 1339180127,},{  country: 'USA',  population: 324459463,},{  country: 'Indonesia',  population: 263991379,}];// highestPopulation(data); ==> [{country: "China", population: 1409517397},{country: "India", population: 1339180127}]// Note: please write one or two lines here describing your solution.function highestPopulation(arrayOfObjects) {  // TODO: your code here  // we must use filter because it return specific data   return filter(arrayOfObjects , function(element){    // put the condition here to check if I must add this object to array or not     return element["population"] > 500000000;  })}//=============================================================================/*                              Q3                                           *///=============================================================================//Write a function halveAll that takes an array of numbers as a input and returns an array// of all of those numbers halved (divided by two).//Note: solve it using the most appropriate helper functions(each,map,filter)// var numsArray = [2, 6, 20, 8, 14];// halveAll(numsArray); ==> [ 1, 3, 10, 4, 7 ]// Note: please write one or two lines here describing your solution.function halveAll(numbers) {  // your code is here  // I must use map because it return array with all array element   return map(numbers , function(element){    // divede the element by two and return the result to map to add the element to array    return element/2;  })}//=============================================================================/*                                  Q4                                       *///=============================================================================//write a function called values that accepts an object as a parameter, //and outputs an array of the object's values.//solve it using one of the most appropriate helpers functions(each,map,filter).// values({first : 5, second: 'something' , third : 129}) ==> [5, 'something', 129]; // Note: please write one or two lines here describing your solution.function values(obj) {  // your code is here   // use map to return the element to put it in new array  map(obj , function(element,key){      return element;  });  // return array of values  }//=======================================================================/*                                  Q5                                  *///======================================================================= // Use the updated version of reduce to write a function max that returns  //the maximum number in an array of numbers. // Write your code here .....function max(array){  return reduce(array , function(maxElement ,number ){    // check if number greater than maxElement => array[0]     if(maxElement < number){      // change the maxElement  value to the number       maxElement = number     }    // return max value in array    return maxElement;  })}               //Good Luck :))